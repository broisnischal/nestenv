import e from"fs";import r,{resolve as i,dirname as t,extname as n,join as s}from"path";import{createFilter as l}from"@rollup/pluginutils";import{transform as o,minify as a}from"@swc/core";import c from"@fastify/deepmerge";import{parseTsconfig as u,getTsconfig as f}from"get-tsconfig";export{default as preserveUseDirective}from"rollup-preserve-directives";let d=new Map,m=(e,i,t)=>{var n,s,l;let o=`${i}:${null!=t?t:"undefined"}`;if(d.has(o))return null!==(n=d.get(o))&&void 0!==n?n:{};if(t&&r.isAbsolute(t)){let e=null!==(s=u(t).compilerOptions)&&void 0!==s?s:{},i=r.dirname(t);return(null!=e.paths||null!=e.baseUrl)&&(e.baseUrl=null!=e.baseUrl?r.resolve(i,e.baseUrl):i),d.set(o,e),e}let a=f(i,t||"tsconfig.json");a||t||(e.warn({message:"Can't find tsconfig.json, trying jsconfig.json now",pluginCode:"SWC_TSCONFIG_NOT_EXISTS"}),a=f(i,"jsconfig.json"));let c=null!==(l=null==a?void 0:a.config.compilerOptions)&&void 0!==l?l:{};if((null!=c.paths||null!=c.baseUrl)&&(null==a?void 0:a.path)){let e=r.dirname(a.path);c.baseUrl=null!=c.baseUrl?r.resolve(e,c.baseUrl):e}return d.set(o,c),c},p=/\.[cm]?[jt]sx?$/,v=/node_modules/,y=[".ts",".tsx",".mjs",".js",".cjs",".jsx"],j=c({all:!0,mergeArray:e=>(r,i)=>e.clone(i)}),x=r=>e.promises.access(r,e.constants.F_OK).then(()=>!0).catch(()=>!1);function g(r={}){let c=l(r.include||p,r.exclude||v),u=r.extensions||y,f=async(e,r=!1)=>{let i=e.replace(p,"");for(let t of u){let n=r?s(e,`index${t}`):`${i}${t}`;if(await x(n))return n}return null};return{name:"swc",async resolveId(r,n){if(r.startsWith("\0")||!c(n))return null;if(n&&"."===r[0]){let s=i(n?t(n):process.cwd(),r),l=await f(s);if(l||!l&&await x(s)&&(await e.promises.stat(s)).isDirectory()&&(l=await f(s,!0)))return l}},async transform(e,i){var s;if(!c(i))return null;let l=n(i);if(!u.includes(l))return null;let a=".ts"===l||".mts"===l||".cts"===l||".tsx"===l,f=!1===r.tsconfig?{}:m(this,t(i),r.tsconfig),d="react-jsx"===f.jsx||"react-jsxdev"===f.jsx,p={jsc:{externalHelpers:f.importHelpers,parser:{syntax:a?"typescript":"ecmascript",[a?"tsx":"jsx"]:a?".tsx"===l:".jsx"===l,decorators:f.experimentalDecorators},transform:{decoratorMetadata:f.emitDecoratorMetadata,react:{runtime:d?"automatic":"classic",importSource:f.jsxImportSource,pragma:f.jsxFactory,pragmaFrag:f.jsxFragmentFactory,development:"react-jsxdev"===f.jsx||void 0}},target:null===(s=f.target)||void 0===s?void 0:s.toLowerCase(),baseUrl:f.baseUrl,paths:f.paths}},{filename:v,include:y,exclude:x,tsconfig:g,extensions:w,minify:h,...b}=r;return o(e,j(p,b,{jsc:{minify:void 0},filename:i,minify:!1}))},renderChunk(e){var i,t,n,s,l;return r.minify||(null===(t=r.jsc)||void 0===t?void 0:null===(i=t.minify)||void 0===i?void 0:i.mangle)||(null===(s=r.jsc)||void 0===s?void 0:null===(n=s.minify)||void 0===n?void 0:n.compress)?a(e,{...null===(l=r.jsc)||void 0===l?void 0:l.minify,module:!0}):null}}}function w(e={}){return{name:"swc-minify",renderChunk:{order:"post",handler:r=>a(r,e)}}}function h(e={}){return{name:"vite-swc-minify",enforce:"post",apply:"build",config(e){var r;return(null===(r=e.build)||void 0===r?void 0:r.minify)&&(e.build.minify=!1,e.build.cssMinify||(e.build.cssMinify=!0)),e},renderChunk:{order:"post",handler:r=>a(r,e)}}}function b(e){return e}function U(e){return e}export{g as default,U as defineRollupSwcMinifyOption,b as defineRollupSwcOption,w as minify,g as swc,h as viteMinify};
